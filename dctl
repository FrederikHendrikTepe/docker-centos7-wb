#!/usr/bin/env bash
#
# DockerControl helper script, feel free to extend|improve me ;)
#
# @copyright (c) 2016 Patrick Paechnatz <patrick.paechnatz@gmail.com>
# @author patrick.paechnatz@gmail.com
# @updated 2016/21/07
# @version 1.0.0
#

# activate strict mode for bash
set -e

# some default definitions
VERSION="1.0.0"

# some default configuration constants
SCRIPT_PATH=$(dirname "$0")

_show_title() {
    echo -e "\n\033[1;92mDockerControl/CLI Helper v$VERSION \033[0m"
    echo -e "copyright (c) 2015-2016 Patrick Paechnatz <patrick.paechnatz@gmail.com>"
}

_show_short_help() {
    echo -e "$./dctl bai | --build-all-images             -> build all images inside this workbench"
    echo -e "$./dctl rec | --remove-exited-container      -> remove all exited containers including 'ofs-volumes'"
    echo -e "$./dctl rac | --remove-all-container         -> remove all (!) containers including 'ofs-volumes'"
    echo -e "$./dctl rdi | --remove-dangling-images       -> remove all dangling <none>|<incomplete> images"
}

_get_parameters() {

    if [ $# -eq 0 ]; then
        echo -e "\nno arguments supplied - please us the following syntax:\n"
        _show_short_help
        exit 1
    fi

    case "${1}" in
        bai|--build-all-images)
            echo; read -p "build all images in this workbench | are you sure (y/n/J/j) ?" -n 1 -r; echo
            if [[ ! $REPLY =~ ^[YyJj]$ ]]
            then
                exit 9
            fi

            cd df-wb-centos-7; ./build; cd ..
            cd df-wb-rdbs-mysql56; ./build; cd ..
            cd df-wb-rdbs-mysql57; ./build; cd ..
            cd df-wb-rdbs-postgresql93; ./build; cd ..
            cd df-wb-rdbs-postgresql95; ./build; cd ..
            cd df-wb-httpd-apache; ./build; cd ..
            cd df-wb-httpd-apache-php56; ./build; cd ..
            cd df-wb-httpd-apache-php70; ./build; cd ..
            cd df-wb-app; ./build; cd ..

            shift
            ;;
        rec|--remove-exited-container)
            echo; read -p "remove all exited containers | are you sure (y/n/J/j) ?" -n 1 -r; echo
            if [[ ! $REPLY =~ ^[YyJj]$ ]]
            then
                exit 9
            fi
            docker ps -a | grep Exit | cut -d ' ' -f 1 | xargs docker rm -fv

            shift
            ;;
        rac|--remove-all-container)
            echo; read -p "remove all (!) containers | are you sure (y/n/J/j) ?" -n 1 -r; echo
            if [[ ! $REPLY =~ ^[YyJj]$ ]]
            then
                exit 9
            fi
            docker rm -fv $(docker ps -a -q)

            shift
            ;;
        rdi|--remove-dangling-images)
            echo; read -p "remove all dangling images | are you sure (y/n/J/j) ?" -n 1 -r; echo
            if [[ ! $REPLY =~ ^[YyJj]$ ]]
            then
                exit 9
            fi

            docker images -q --filter "dangling=true" | xargs docker rmi -f
            shift
            ;;

    esac

}

_show_title
_get_parameters $@